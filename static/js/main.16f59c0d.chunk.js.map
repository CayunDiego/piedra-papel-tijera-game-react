{"version":3,"sources":["components/Score.jsx","components/Header.jsx","components/Wrapper.jsx","components/Token.jsx","components/Game.jsx","components/Button.jsx","components/Rules.jsx","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","HeaderStyled","Header","WrapperStyled","Wrapper","children","TokenStyled","color","base","border","colors","paper","rock","scissors","Token","name","image","className","src","alt","GameStyled","Game","ButtonStyled","Button","props","RulesSyled","Rules","useState","isVisible","setisVisible","handleToggleClick","onClick","AppStyled","main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sxBAGA,IAAMA,EAAcC,IAAOC,IAAV,KA+BFC,EATD,WACV,OACI,kBAACH,EAAD,KACI,wCACA,mC,uYCzBZ,IAAMI,EAAeH,IAAOC,IAAV,KAyBHG,EATA,WACX,OACI,kBAACD,EAAD,KACI,oCAAS,6BAAT,UAAqB,6BAArB,aACA,kBAAC,EAAD,Q,8GCrBZ,IAAME,EAAgBL,IAAOC,IAAV,KAaJK,EARC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACd,OACI,kBAACF,EAAD,KACKE,I,+jBCRb,IAAMC,EAAcR,IAAOC,IAAV,KAGM,qBAAEQ,MAAiBC,QAMlB,qBAAED,MAAiBE,UAkBrCC,EAAS,CACXC,MAAO,CACHH,KAAM,UACNC,OAAQ,WAEZG,KAAM,CACFJ,KAAM,UACNC,OAAQ,WAEZI,SAAU,CACNL,KAAM,UACNC,OAAQ,YAeDK,EAXD,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACNC,EAAK,+BAA2BD,EAA3B,QACX,OACI,kBAACT,EAAD,CAAaC,MAAOG,EAAOK,IACvB,yBAAKE,UAAU,QACX,yBAAKC,IAAKF,EAAOG,IAAI,Q,+XC9CrC,IAAMC,EAAatB,IAAOC,IAAV,KA6BDsB,EAXF,WACT,OACI,kBAACD,EAAD,KACI,kBAAC,EAAD,CAAOL,KAAK,UACZ,kBAAC,EAAD,CAAOA,KAAK,aACZ,kBAAC,EAAD,CAAOA,KAAK,SACZ,yBAAKG,IAAI,kCAAkCC,IAAI,GAAGF,UAAU,e,0VCzBxE,IAAMK,EAAexB,IAAOC,IAAV,KAqBHwB,EARA,SAAC,GAAgB,IAAZC,EAAW,oBAC3B,OACI,kBAACF,EAAiBE,EAAlB,U,oiBCdR,IAAMC,EAAa3B,IAAOC,IAAV,KAiDD2B,EAzBD,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,KAGVC,EAAoB,WACtBD,GAAcD,IAGlB,OACI,kBAACH,EAAD,KAEQG,GACK,yBAAKX,UAAU,iBACZ,qCACA,yBAAKC,IAAI,kCAAkCC,IAAI,qBAC/C,yBAAKD,IAAI,iCAAiCC,IAAI,gBAC9CY,QAASD,EACTb,UAAU,kBAItB,kBAAC,EAAD,CAAQc,QAASD,M,qZCxC7B,IAAME,EAAYlC,IAAOmC,KAAV,KA4BAC,MAdf,WACE,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,KACG,yBAAKf,UAAU,eACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCjBQkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.16f59c0d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ScoreStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: white;\r\n    padding: 10px 0 7px 0;\r\n    border-radius: 8px;\r\n    width: 80px;\r\n    font-weight: 700;\r\n    small{\r\n        color: var(--ScoreText);\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n    }\r\n    p{\r\n        color: var(--DarkText);\r\n        font-size: 40px;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst Score = () => {\r\n    return (\r\n        <ScoreStyled>\r\n            <small>Score</small>\r\n            <p>12</p>\r\n        </ScoreStyled>\r\n    )\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Score from './Score';\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white; \r\n  padding: 12px 12px 12px 23px;\r\n  border-radius: .5em;\r\n  border: 3px solid rgba(255, 255, 255, .29);\r\n  h1{\r\n      font-size: 18px;\r\n      line-height: 16px;\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderStyled>\r\n            <h1>Rock <br/> Paper <br/> Scissors</h1>\r\n            <Score/>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1024px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Wrapper = ({children}) => {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TokenStyled = styled.div`\r\n  width: 130px;\r\n  height: 125px;\r\n  border: 16px solid ${({color}) => color.base};\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 5px 0 ${({color}) => color.border};\r\n  background: white;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n  &:active{\r\n      transform: scale(.9)\r\n  }\r\n  .fill{\r\n    box-shadow: 0 -4px 0 #babfd4;\r\n    flex: 1;\r\n    align-self: stretch;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst colors = {\r\n    paper: {\r\n        base: '#516ef4',\r\n        border: '#2543c3',\r\n    },\r\n    rock: {\r\n        base: '#de3a5a',\r\n        border: '#980e31',\r\n    },\r\n    scissors: {\r\n        base: '#eca81e',\r\n        border: '#c76c14',\r\n    }\r\n}\r\n\r\nconst Token = ({name}) => {\r\n    const image = `./assets/images/icon-${name}.svg`;\r\n    return (\r\n        <TokenStyled color={colors[name]}>\r\n            <div className=\"fill\">\r\n                <img src={image} alt=\"\"/>\r\n            </div>\r\n        </TokenStyled>\r\n    )\r\n}\r\n\r\nexport default Token;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Token from './Token';\r\n\r\nconst GameStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 130px 130px;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px;\r\n  margin: 2em 0;\r\n  position: relative;\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2;\r\n  }\r\n  .triangle{\r\n    position: absolute;\r\n    width: 202px;\r\n    top: 60px;\r\n  }\r\n`;\r\n\r\nconst Game = () => {\r\n    return (\r\n        <GameStyled>\r\n            <Token name='paper'/>\r\n            <Token name='scissors'/>\r\n            <Token name='rock'/>\r\n            <img src=\"./assets/images/bg-triangle.svg\" alt=\"\" className='triangle'/>\r\n        </GameStyled>\r\n    )\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.div`\r\n    display: inline-flex;\r\n    border: 1px solid white;\r\n    border-radius: .5em;\r\n    min-width: 128px;\r\n    padding: .7em;\r\n    box-sizing: border-box;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2.5px;\r\n`;\r\n\r\nconst Button = ({...props}) => {\r\n    return (\r\n        <ButtonStyled {...props}>\r\n            Rules\r\n        </ButtonStyled>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst RulesSyled = styled.div`\r\n    text-align: center;\r\n    .rules-overlay{\r\n        background: white;\r\n        position: fixed;\r\n        right: 0;\r\n        left: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: 2;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 2em;\r\n    }\r\n    h2{\r\n        color: #3B4262;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst Rules = () => {\r\n    const [isVisible, setisVisible] = useState(false);\r\n\r\n    const handleToggleClick = () => {\r\n        setisVisible(!isVisible);\r\n    }\r\n\r\n    return (\r\n        <RulesSyled>\r\n            {\r\n                isVisible && (\r\n                     <div className=\"rules-overlay\">\r\n                        <h2>Rules</h2>\r\n                        <img src=\"./assets/images/image-rules.svg\" alt=\"reglas del juego\"/>\r\n                        <img src=\"./assets/images/icon-close.svg\" alt=\"Cerrar reglas\"\r\n                        onClick={handleToggleClick}\r\n                        className='close-button'/>\r\n                    </div>\r\n                )\r\n            }\r\n            <Button onClick={handleToggleClick}/>\r\n        </RulesSyled>\r\n    )\r\n}\r\n\r\nexport default Rules;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport styled from 'styled-components';\nimport Wrapper from './components/Wrapper';\nimport Game from './components/Game';\nimport Rules from './components/Rules';\n\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle at top, var(--RadiaGradient1) 30%, var(--RadiaGradient2) 100% );\n  color: white;\n  .app-content{\n    border: 1px solid red;\n    min-height: 100vh;\n    padding: 2em;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\n\nfunction App() {\n  return (\n    <AppStyled>\n      <Wrapper>\n         <div className='app-content'>\n            <Header/>\n            <Game/>\n            <Rules/>\n         </div>\n      </Wrapper>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}