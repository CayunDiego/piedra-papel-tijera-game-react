{"version":3,"sources":["context/ScoreContetx.js","components/Score.jsx","components/Header.jsx","components/Wrapper.jsx","components/Token.jsx","components/Button.jsx","components/Game.jsx","components/Rules.jsx","App.js","serviceWorker.js","index.js"],"names":["ScoreContext","createContext","ScoreContetx","children","useState","score","setScore","Provider","value","ScoreStyled","styled","div","Score","useContext","HeaderStyled","Header","WrapperStyled","Wrapper","TokenStyled","name","color","base","border","colors","paper","rock","scissors","default","Token","onClick","image","className","src","alt","ButtonStyled","WhiteButton","Button","props","GameStyled","elements","Game","playing","setPlaying","pick","setPick","housePick","setHousePick","results","setResults","louchHousePick","Promise","resolve","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","result","playGame","prev","RulesSyled","Rules","isVisible","setisVisible","handleToggleClick","AppStyled","main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ee9af90.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const ScoreContext = createContext(0);\r\n\r\nconst ScoreContetx = ({children}) => {\r\n    const [score, setScore] = useState(0);\r\n    return (\r\n        <ScoreContext.Provider value={{score, setScore}}>\r\n            {children}\r\n        </ScoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ScoreContetx;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ScoreContext } from '../context/ScoreContetx';\r\n\r\nconst ScoreStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: white;\r\n    padding: 10px 0 7px 0;\r\n    border-radius: 8px;\r\n    width: 80px;\r\n    font-weight: 700;\r\n    small{\r\n        color: var(--ScoreText);\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n    }\r\n    p{\r\n        color: var(--DarkText);\r\n        font-size: 40px;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst Score = () => {\r\n    const { score } = useContext(ScoreContext);\r\n    return (\r\n        <ScoreStyled>\r\n            <small>Score</small>\r\n            <p>{score}</p>\r\n        </ScoreStyled>\r\n    )\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Score from './Score';\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white; \r\n  padding: 12px 12px 12px 23px;\r\n  border-radius: .5em;\r\n  border: 3px solid rgba(255, 255, 255, .29);\r\n  h1{\r\n      font-size: 18px;\r\n      line-height: 16px;\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderStyled>\r\n            <h1>Rock <br/> Paper <br/> Scissors</h1>\r\n            <Score/>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1024px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Wrapper = ({children}) => {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TokenStyled = styled.div`\r\n  width: 130px;\r\n  height: 125px;\r\n  padding: ${({name}) => name === 'default' ? '1px' : '0'};\r\n  border: 16px solid ${({color}) => color.base};\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 5px 0 ${({color}) => color.border};\r\n  cursor: pointer;\r\n  z-index: 2;\r\n  &:active{\r\n      transform: scale(.9)\r\n  }\r\n  .fill{\r\n    background: ${({name}) => name === 'default' ? '#122343' : 'white'};\r\n    box-shadow: 0 -4px 0 ${({name}) => name === 'default' ? 'transparent' : '#babfd4'};\r\n    flex: 1;\r\n    align-self: stretch;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst colors = {\r\n    paper: {\r\n        base: '#516ef4',\r\n        border: '#2543c3',\r\n    },\r\n    rock: {\r\n        base: '#de3a5a',\r\n        border: '#980e31',\r\n    },\r\n    scissors: {\r\n        base: '#eca81e',\r\n        border: '#c76c14',\r\n    },\r\n    default: {\r\n        base: 'transparent',\r\n        border: 'transparent',\r\n    }\r\n}\r\n\r\nconst Token = ({name = 'default', onClick}) => {\r\n    const image = `./assets/images/icon-${name}.svg`;\r\n\r\n    const handleClick = () => {\r\n        onClick(name);\r\n    }\r\n\r\n    const color = colors[name];\r\n\r\n    return (\r\n        <TokenStyled color={color} onClick={handleClick} name={name}>\r\n            <div className=\"fill\">\r\n                <img src={image} alt=\"\"/>\r\n            </div>\r\n        </TokenStyled>\r\n    )\r\n}\r\n\r\nexport default Token;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.div`\r\n    display: inline-flex;\r\n    border: 1px solid white;\r\n    border-radius: .5em;\r\n    min-width: 128px;\r\n    padding: .7em;\r\n    box-sizing: border-box;\r\n    justify-content: center;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2.5px;\r\n`;\r\n\r\nconst Button = ({children,...props}) => {\r\n    return (\r\n        <ButtonStyled {...props}>\r\n            {children}\r\n        </ButtonStyled>\r\n    )\r\n}\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n    background: white;\r\n    color: #101a3f;\r\n    min-width:220px; \r\n`;\r\n\r\nexport default Button;\r\n","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Token from './Token';\r\nimport { WhiteButton } from './Button';\r\nimport { ScoreContext } from '../context/ScoreContetx';\r\n\r\nconst GameStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 130px 130px;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px;\r\n  margin: 2em 0;\r\n  position: relative;\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2;\r\n  }\r\n  .triangle{\r\n    position: absolute;\r\n    width: 202px;\r\n    top: 60px;\r\n  }\r\n  .in-game{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    font-size: .8em;\r\n    font-weight: 700;\r\n    letter-spacing: 1px;\r\n  }\r\n  .results{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h2{\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nconst elements = ['paper', 'scissors', 'rock'];\r\n\r\nconst Game = () => {\r\n  const [playing, setPlaying] = useState(false);\r\n  const [pick, setPick] = useState('');\r\n  const [housePick, setHousePick] = useState('default');\r\n  const [results, setResults] = useState('');\r\n  const { setScore } = useContext(ScoreContext);\r\n\r\n  const getRandomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n  }\r\n\r\n  const louchHousePick = () => {\r\n    return new Promise((resolve, ) => {\r\n      let pick;\r\n      const interval = setInterval(()=>{\r\n        pick = elements[getRandomInt(0,3)];\r\n        setHousePick(pick);\r\n      },75);\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        resolve(pick);\r\n      },2000);\r\n    });\r\n  }\r\n\r\n  const onClick = async name => {\r\n    setPlaying(true);\r\n    setPick(name);\r\n    const house = await louchHousePick();\r\n    // console.log('La casa eligió: ', house);\r\n    const result = playGame(name, house);\r\n    setResults(result);\r\n    if(result === 'win'){\r\n      setScore(prev => prev + 1);\r\n    }\r\n  }\r\n\r\n  const handleTryAgainClick = () => {\r\n    setPlaying(false);\r\n  }\r\n\r\n  const playGame = (pick, housePick) => {\r\n    if(pick === housePick){\r\n      return 'draw';\r\n    }\r\n    if(pick === 'paper'){\r\n      if(housePick === 'scissors'){\r\n        return 'lose';\r\n      }\r\n      if(housePick === 'rock'){\r\n        return 'win';\r\n      }\r\n    }\r\n    if(pick === 'scissors'){\r\n      if(housePick === 'paper'){\r\n        return 'win';\r\n      }\r\n      if(housePick === 'rock'){\r\n        return 'lose';\r\n      }\r\n    }\r\n    if(pick === 'rock'){\r\n      if(housePick === 'paper'){\r\n        return 'lose';\r\n      }\r\n      if(housePick === 'scissors'){\r\n        return 'win';\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n      <GameStyled>\r\n        {\r\n          !playing ? (\r\n                      <>\r\n                        <Token name='paper' onClick={onClick}/>\r\n                        <Token name='scissors' onClick={onClick}/>\r\n                        <Token name='rock' onClick={onClick}/>\r\n                        <img src=\"./assets/images/bg-triangle.svg\" alt=\"\" className='triangle'/>\r\n                      </>\r\n                    )\r\n                  : (\r\n                    <>\r\n                      <div className='in-game'>\r\n                        <Token name={pick}/>\r\n                        <p>You Picked</p>\r\n                      </div>\r\n                      <div className='in-game'>\r\n                        <Token name={housePick}/>\r\n                        <p>The house Picked</p>\r\n                      </div>\r\n                      <div className=\"results\">\r\n                      <h2>You {results}</h2>\r\n                        <WhiteButton onClick={handleTryAgainClick}>\r\n                          Play again\r\n                        </WhiteButton>\r\n                      </div>\r\n                    </>\r\n                  )\r\n        }\r\n      </GameStyled>\r\n  )\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst RulesSyled = styled.div`\r\n    text-align: center;\r\n    .rules-overlay{\r\n        background: white;\r\n        position: fixed;\r\n        right: 0;\r\n        left: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: 2;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 2em;\r\n    }\r\n    h2{\r\n        color: #3B4262;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst Rules = () => {\r\n    const [isVisible, setisVisible] = useState(false);\r\n\r\n    const handleToggleClick = () => {\r\n        setisVisible(!isVisible);\r\n    }\r\n\r\n    return (\r\n        <RulesSyled>\r\n            {\r\n                isVisible && (\r\n                     <div className=\"rules-overlay\">\r\n                        <h2>Rules</h2>\r\n                        <img src=\"./assets/images/image-rules.svg\" alt=\"reglas del juego\"/>\r\n                        <img src=\"./assets/images/icon-close.svg\" alt=\"Cerrar reglas\"\r\n                        onClick={handleToggleClick}\r\n                        className='close-button'/>\r\n                    </div>\r\n                )\r\n            }\r\n            <Button onClick={handleToggleClick}>\r\n                Rules\r\n            </Button>\r\n        </RulesSyled>\r\n    )\r\n}\r\n\r\nexport default Rules;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport styled from 'styled-components';\nimport Wrapper from './components/Wrapper';\nimport Game from './components/Game';\nimport Rules from './components/Rules';\nimport ScoreContetx from './context/ScoreContetx';\n\n\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle at top, var(--RadiaGradient1) 30%, var(--RadiaGradient2) 100% );\n  color: white;\n  .app-content{\n    border: 1px solid red;\n    min-height: 100vh;\n    padding: 2em;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\n\nfunction App() {\n  return (\n    <ScoreContetx>\n      <AppStyled>\n        <Wrapper>\n          <div className='app-content'>\n              <Header/>\n              <Game/>\n              <Rules/>\n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContetx>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}